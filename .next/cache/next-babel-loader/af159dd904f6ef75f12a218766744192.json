{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\fabrice\\\\Documents\\\\Workspace\\\\EcoNext\\\\pages\\\\[clientAlias]\\\\workers-field-of-qualification.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport _ from 'lodash';\nimport { useRouter } from 'next/router';\nimport { formatNumber, formatChangeNumber } from '../../src/Utils';\n\nvar LocalWorkerFieldofQualififcation = function LocalWorkerFieldofQualififcation(_ref) {\n  var clients = _ref.clients;\n  var router = useRouter();\n  var clientAlias = router.query.clientAlias;\n  var tableData = tableBuilder({\n    prettyName: 'prettyName',\n    indName: 'indName',\n    bmName: 'bmName',\n    genderName: 'female',\n    TabularData: []\n  });\n  console.log('tableData', tableData);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Workers field of qualification\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Client alias is \", clientAlias), __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, clients.map(function (client) {\n    return __jsx(\"option\", {\n      key: client.ClientID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, client.Name);\n  })));\n};\n\nexport default LocalWorkerFieldofQualififcation;\nLocalWorkerFieldofQualififcation.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/monash/workers-field-of-qualification');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar Source = function Source() {\n  return __jsx(React.Fragment, null, \"Source: Australian Bureau of Statistics, Regional Population Growth, Australia (3218.0). Compiled and presented in economy.id by\", ' ', __jsx(\"a\", {\n    href: \"http://home.id.com.au/about-us/\",\n    target: \"_blank\",\n    title: \".id website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \".id, the population experts.\", __jsx(\"span\", {\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" (opens a new window)\")));\n};\n\nvar tableBuilder = function tableBuilder(_ref3) {\n  var clientName = _ref3.prettyName,\n      industry = _ref3.indName,\n      benchmark = _ref3.bmName,\n      gender = _ref3.genderName,\n      data = _ref3.TabularData;\n  var footerRows = data.filter(function (item) {\n    return item.IndustryName === 'Total';\n  });\n\n  var parents = _.sortBy(data.filter(function (item) {\n    return item.Heirarchy === 'P' && item.IndustryName !== 'Total';\n  }), function (item) {\n    return item.LabelKey;\n  });\n\n  var children = data.filter(function (item) {\n    return item.Heirarchy === 'C';\n  });\n  parents.forEach(function (parent) {\n    parent.children = children.filter(function (child) {\n      return child.LabelKey > parent.LabelKey && child.LabelKey < parent.LabelKey + 1000;\n    });\n  });\n  return {\n    cssClass: '',\n    allowExport: false,\n    allowSort: true,\n    allowSortReset: true,\n    groupOn: '',\n    clientAlias: 'Monash',\n    source: __jsx(Source, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    rawDataSource: 'Source: Australian Bureau of Statistics, Regional Population Growth, Australia (3218.0). Compiled and presented in economy.id by.id, the population experts.',\n    anchorName: 'service-age-groups',\n    headRows: [{\n      cssClass: '',\n      cols: [{\n        cssClass: 'table-area-name',\n        displayText: 'Local workers field of qualification - Summary',\n        colSpan: 10,\n        rowSpan: 0\n      }],\n      key: 'hr0'\n    }, {\n      cssClass: '',\n      cols: [{\n        cssClass: '',\n        displayText: \"\".concat(clientName, \" - \").concat(industry),\n        colSpan: 1,\n        rowSpan: 0\n      }, {\n        cssClass: 'xeven start-year',\n        displayText: ' 2016',\n        colSpan: 3,\n        rowSpan: 0\n      }, {\n        cssClass: 'xodd end-year',\n        displayText: '2011',\n        colSpan: 3,\n        rowSpan: 0\n      }, {\n        cssClass: 'xeven start-year',\n        displayText: 'Change',\n        colSpan: 1,\n        rowSpan: 0\n      }],\n      key: 'hr1'\n    }],\n    cols: [{\n      id: 0,\n      displayText: 'Field of qualification (Click rows to view sub-categories)',\n      dataType: 'int',\n      sortable: false,\n      cssClass: 'xodd xfirst'\n    }, {\n      id: 1,\n      displayText: 'Number',\n      dataType: 'int',\n      sortable: true,\n      cssClass: 'xeven latest',\n      format: '{0:#,0}'\n    }, {\n      id: 2,\n      displayText: '%',\n      dataType: 'money',\n      sortable: true,\n      cssClass: 'xeven latest',\n      format: '{0:+#,0;-#,0;0}'\n    }, {\n      id: 3,\n      displayText: \"\".concat(benchmark),\n      dataType: 'money',\n      sortable: true,\n      cssClass: 'xeven latest',\n      format: '{0:+#,0;-#,0;0}'\n    }, {\n      id: 4,\n      displayText: 'Number',\n      title: '',\n      dataType: 'int',\n      sortable: true,\n      cssClass: 'xodd',\n      format: '{0:#,0}'\n    }, {\n      id: 5,\n      displayText: '%',\n      dataType: 'money',\n      sortable: true,\n      cssClass: 'per xodd',\n      format: '{0:+#,0;-#,0;0}'\n    }, {\n      id: 6,\n      displayText: \"\".concat(benchmark),\n      dataType: 'money',\n      sortable: true,\n      cssClass: 'xodd',\n      format: '{0:+#,0;-#,0;0}'\n    }, {\n      id: 7,\n      displayText: '2011 - 2016',\n      title: '',\n      dataType: 'int',\n      sortable: true,\n      cssClass: 'xeven',\n      format: '{0:#,0}'\n    }],\n    rows: parents.map(function (row) {\n      return {\n        expandable: row.children.length > 0,\n        id: row.LabelKey,\n        data: [row.LabelName, row.NoYear1, row.PerYear1, row.BMYear1, row.NoYear2, row.PerYear2, row.BMYear2, row.Change12],\n        formattedData: [\"\".concat(row.LabelName), formatNumber(row.NoYear1), formatNumber(row.PerYear1), formatNumber(row.BMYear1), formatNumber(row.NoYear2), formatNumber(row.PerYear2), formatNumber(row.BMYear2), formatChangeNumber(row.Change12, '--')],\n        childRows: row.children.map(function (childRow) {\n          return {\n            id: childRow.LabelKey,\n            data: [childRow.LabelName, childRow.NoYear1, childRow.PerYear1, childRow.BMYear1, childRow.NoYear2, childRow.PerYear2, childRow.BMYear2, childRow.Change12],\n            formattedData: [\"\".concat(childRow.LabelName), formatNumber(childRow.NoYear1), formatNumber(childRow.PerYear1), formatNumber(childRow.BMYear1), formatNumber(childRow.NoYear2), formatNumber(childRow.PerYear2), formatNumber(childRow.BMYear2), formatChangeNumber(childRow.Change12, '--')]\n          };\n        })\n      };\n    }),\n    footRows: footerRows.map(function (row) {\n      return {\n        cssClass: '',\n        cols: [{\n          cssClass: '',\n          displayText: \"Total \".concat(gender),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatNumber(row.NoYear1),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatNumber(row.PerYear1),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatNumber(row.BMYear1),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatNumber(row.NoYear2),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatNumber(row.PerYear2),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatNumber(row.BMYear2),\n          colSpan: 1\n        }, {\n          cssClass: '',\n          displayText: formatChangeNumber(row.Change12),\n          colSpan: 1\n        }]\n      };\n    }),\n    noOfRowsOnInit: 16\n  };\n};","map":{"version":3,"sources":["C:\\Users\\fabrice\\Documents\\Workspace\\EcoNext\\pages\\[clientAlias]\\workers-field-of-qualification.tsx"],"names":["fetch","_","useRouter","formatNumber","formatChangeNumber","LocalWorkerFieldofQualififcation","clients","router","clientAlias","query","tableData","tableBuilder","prettyName","indName","bmName","genderName","TabularData","console","log","map","client","ClientID","Name","getInitialProps","res","json","data","Source","clientName","industry","benchmark","gender","footerRows","filter","item","IndustryName","parents","sortBy","Heirarchy","LabelKey","children","forEach","parent","child","cssClass","allowExport","allowSort","allowSortReset","groupOn","source","rawDataSource","anchorName","headRows","cols","displayText","colSpan","rowSpan","key","id","dataType","sortable","format","title","rows","row","expandable","length","LabelName","NoYear1","PerYear1","BMYear1","NoYear2","PerYear2","BMYear2","Change12","formattedData","childRows","childRow","footRows","noOfRowsOnInit"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport _ from 'lodash';\r\nimport { useRouter } from 'next/router';\r\nimport { formatNumber, formatChangeNumber } from '../../src/Utils';\r\n\r\nconst LocalWorkerFieldofQualififcation = ({ clients }) => {\r\n  const router = useRouter();\r\n  const { clientAlias } = router.query;\r\n\r\n  const tableData = tableBuilder({\r\n    prettyName: 'prettyName',\r\n    indName: 'indName',\r\n    bmName: 'bmName',\r\n    genderName: 'female',\r\n    TabularData: []\r\n  });\r\n\r\n  console.log('tableData', tableData);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Workers field of qualification</h1>\r\n      <p>Client alias is {clientAlias}</p>\r\n      <select>\r\n        {clients.map(client => (\r\n          <option key={client.ClientID}>{client.Name}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocalWorkerFieldofQualififcation;\r\n\r\nLocalWorkerFieldofQualififcation.getInitialProps = async function() {\r\n  const res = await fetch(\r\n    'http://localhost:3000/api/monash/workers-field-of-qualification'\r\n  );\r\n  const data = await res.json();\r\n\r\n  return data;\r\n};\r\n\r\nconst Source = () => (\r\n  <>\r\n    Source: Australian Bureau of Statistics, Regional Population Growth,\r\n    Australia (3218.0). Compiled and presented in economy.id by{' '}\r\n    <a\r\n      href=\"http://home.id.com.au/about-us/\"\r\n      target=\"_blank\"\r\n      title=\".id website\"\r\n    >\r\n      .id, the population experts.\r\n      <span className=\"hidden\"> (opens a new window)</span>\r\n    </a>\r\n  </>\r\n);\r\n\r\nconst tableBuilder = ({\r\n  prettyName: clientName,\r\n  indName: industry,\r\n  bmName: benchmark,\r\n  genderName: gender,\r\n  TabularData: data\r\n}) => {\r\n  const footerRows = data.filter(item => item.IndustryName === 'Total');\r\n  const parents = _.sortBy(\r\n    data.filter(\r\n      item => item.Heirarchy === 'P' && item.IndustryName !== 'Total'\r\n    ),\r\n    item => item.LabelKey\r\n  );\r\n  const children = data.filter(item => item.Heirarchy === 'C');\r\n\r\n  parents.forEach(parent => {\r\n    parent.children = children.filter(\r\n      child =>\r\n        child.LabelKey > parent.LabelKey &&\r\n        child.LabelKey < parent.LabelKey + 1000\r\n    );\r\n  });\r\n\r\n  return {\r\n    cssClass: '',\r\n    allowExport: false,\r\n    allowSort: true,\r\n    allowSortReset: true,\r\n    groupOn: '',\r\n    clientAlias: 'Monash',\r\n    source: <Source />,\r\n    rawDataSource:\r\n      'Source: Australian Bureau of Statistics, Regional Population Growth, Australia (3218.0). Compiled and presented in economy.id by.id, the population experts.',\r\n    anchorName: 'service-age-groups',\r\n    headRows: [\r\n      {\r\n        cssClass: '',\r\n        cols: [\r\n          {\r\n            cssClass: 'table-area-name',\r\n            displayText: 'Local workers field of qualification - Summary',\r\n            colSpan: 10,\r\n            rowSpan: 0\r\n          }\r\n        ],\r\n        key: 'hr0'\r\n      },\r\n      {\r\n        cssClass: '',\r\n        cols: [\r\n          {\r\n            cssClass: '',\r\n            displayText: `${clientName} - ${industry}`,\r\n            colSpan: 1,\r\n            rowSpan: 0\r\n          },\r\n          {\r\n            cssClass: 'xeven start-year',\r\n            displayText: ' 2016',\r\n            colSpan: 3,\r\n            rowSpan: 0\r\n          },\r\n          {\r\n            cssClass: 'xodd end-year',\r\n            displayText: '2011',\r\n            colSpan: 3,\r\n            rowSpan: 0\r\n          },\r\n          {\r\n            cssClass: 'xeven start-year',\r\n            displayText: 'Change',\r\n            colSpan: 1,\r\n            rowSpan: 0\r\n          }\r\n        ],\r\n        key: 'hr1'\r\n      }\r\n    ],\r\n    cols: [\r\n      {\r\n        id: 0,\r\n        displayText:\r\n          'Field of qualification (Click rows to view sub-categories)',\r\n        dataType: 'int',\r\n        sortable: false,\r\n        cssClass: 'xodd xfirst'\r\n      },\r\n      {\r\n        id: 1,\r\n        displayText: 'Number',\r\n        dataType: 'int',\r\n        sortable: true,\r\n        cssClass: 'xeven latest',\r\n        format: '{0:#,0}'\r\n      },\r\n      {\r\n        id: 2,\r\n        displayText: '%',\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'xeven latest',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 3,\r\n        displayText: `${benchmark}`,\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'xeven latest',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 4,\r\n        displayText: 'Number',\r\n        title: '',\r\n        dataType: 'int',\r\n        sortable: true,\r\n        cssClass: 'xodd',\r\n        format: '{0:#,0}'\r\n      },\r\n      {\r\n        id: 5,\r\n        displayText: '%',\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'per xodd',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 6,\r\n        displayText: `${benchmark}`,\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'xodd',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 7,\r\n        displayText: '2011 - 2016',\r\n        title: '',\r\n        dataType: 'int',\r\n        sortable: true,\r\n        cssClass: 'xeven',\r\n        format: '{0:#,0}'\r\n      }\r\n    ],\r\n    rows: parents.map(row => ({\r\n      expandable: row.children.length > 0,\r\n      id: row.LabelKey,\r\n      data: [\r\n        row.LabelName,\r\n        row.NoYear1,\r\n        row.PerYear1,\r\n        row.BMYear1,\r\n        row.NoYear2,\r\n        row.PerYear2,\r\n        row.BMYear2,\r\n        row.Change12\r\n      ],\r\n      formattedData: [\r\n        `${row.LabelName}`,\r\n        formatNumber(row.NoYear1),\r\n        formatNumber(row.PerYear1),\r\n        formatNumber(row.BMYear1),\r\n        formatNumber(row.NoYear2),\r\n        formatNumber(row.PerYear2),\r\n        formatNumber(row.BMYear2),\r\n        formatChangeNumber(row.Change12, '--')\r\n      ],\r\n      childRows: row.children.map(childRow => ({\r\n        id: childRow.LabelKey,\r\n        data: [\r\n          childRow.LabelName,\r\n          childRow.NoYear1,\r\n          childRow.PerYear1,\r\n          childRow.BMYear1,\r\n          childRow.NoYear2,\r\n          childRow.PerYear2,\r\n          childRow.BMYear2,\r\n          childRow.Change12\r\n        ],\r\n        formattedData: [\r\n          `${childRow.LabelName}`,\r\n          formatNumber(childRow.NoYear1),\r\n          formatNumber(childRow.PerYear1),\r\n          formatNumber(childRow.BMYear1),\r\n          formatNumber(childRow.NoYear2),\r\n          formatNumber(childRow.PerYear2),\r\n          formatNumber(childRow.BMYear2),\r\n          formatChangeNumber(childRow.Change12, '--')\r\n        ]\r\n      }))\r\n    })),\r\n    footRows: footerRows.map(row => {\r\n      return {\r\n        cssClass: '',\r\n        cols: [\r\n          { cssClass: '', displayText: `Total ${gender}`, colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.NoYear1), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.PerYear1), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.BMYear1), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.NoYear2), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.PerYear2), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.BMYear2), colSpan: 1 },\r\n          {\r\n            cssClass: '',\r\n            displayText: formatChangeNumber(row.Change12),\r\n            colSpan: 1\r\n          }\r\n        ]\r\n      };\r\n    }),\r\n    noOfRowsOnInit: 16\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}