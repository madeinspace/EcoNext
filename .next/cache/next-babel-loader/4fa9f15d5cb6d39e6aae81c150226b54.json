{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabrice\\\\Documents\\\\Workspace\\\\EcoNext\\\\pages\\\\[clientAlias]\\\\population.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\n\nconst Population = ({\n  clients\n}) => {\n  const router = useRouter();\n  const {\n    clientAlias\n  } = router.query;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Client alias is \", clientAlias), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, clients.map(client => __jsx(\"li\", {\n    key: client.ClientID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, client.name))));\n};\n\nexport default Population;\n\nPopulation.getInitialProps = async function () {\n  const res = await fetch('http://localhost:3000/api/monash/population');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return data;\n};","map":{"version":3,"sources":["C:\\Users\\fabrice\\Documents\\Workspace\\EcoNext\\pages\\[clientAlias]\\population.tsx"],"names":["fetch","useRouter","Population","clients","router","clientAlias","query","map","client","ClientID","name","getInitialProps","res","data","json","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAClC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAkBD,MAAM,CAACE,KAA/B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBD,WAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACI,GAAR,CAAYC,MAAM,IACjB;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,MAAM,CAACE,IAAlC,CADD,CADH,CAFF,CADF;AAUD,CAbD;;AAeA,eAAeR,UAAf;;AAEAA,UAAU,CAACS,eAAX,GAA6B,kBAAiB;AAC5C,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC,6CAAD,CAAvB;AACA,QAAMa,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAOJ,IAAP;AACD,CAPD","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst Population = ({ clients }) => {\r\n  const router = useRouter();\r\n  const { clientAlias } = router.query;\r\n  return (\r\n    <div>\r\n      <p>Client alias is {clientAlias}</p>\r\n      <ul>\r\n        {clients.map(client => (\r\n          <li key={client.ClientID}>{client.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Population;\r\n\r\nPopulation.getInitialProps = async function() {\r\n  const res = await fetch('http://localhost:3000/api/monash/population');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}