{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\fabrice\\\\Documents\\\\Workspace\\\\EcoNext\\\\pages\\\\[clientAlias]\\\\population.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\n\nvar Population = function Population(_ref) {\n  var clients = _ref.clients;\n  var router = useRouter();\n  var clientAlias = router.query.clientAlias;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Client alias is \", clientAlias), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, clients.map(function (client) {\n    return __jsx(\"li\", {\n      key: client.ClientID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, client.Name);\n  })));\n};\n\nexport default Population;\nPopulation.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/monash/population');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", data);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));","map":{"version":3,"sources":["C:\\Users\\fabrice\\Documents\\Workspace\\EcoNext\\pages\\[clientAlias]\\population.tsx"],"names":["fetch","useRouter","Population","clients","router","clientAlias","query","map","client","ClientID","Name","getInitialProps","res","json","data","console","log","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAClC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADkC,MAE1BI,WAF0B,GAEVD,MAAM,CAACE,KAFG,CAE1BD,WAF0B;AAGlC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBA,WAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACI,GAAR,CAAY,UAAAC,MAAM;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,MAAM,CAACE,IAAlC,CADiB;AAAA,GAAlB,CADH,CAFF,CADF;AAUD,CAbD;;AAeA,eAAeR,UAAf;AAEAA,UAAU,CAACS,eAAX;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACTX,KAAK,CAAC,6CAAD,CADI;;AAAA;AACrBY,UAAAA,GADqB;AAAA;AAAA,iBAERA,GAAG,CAACC,IAAJ,EAFQ;;AAAA;AAErBC,UAAAA,IAFqB;AAI3BC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJ2B,2CAMpBH,IANoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst Population = ({ clients }) => {\r\n  const router = useRouter();\r\n  const { clientAlias } = router.query;\r\n  return (\r\n    <div>\r\n      <p>Client alias is {clientAlias}</p>\r\n      <ul>\r\n        {clients.map(client => (\r\n          <li key={client.ClientID}>{client.Name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Population;\r\n\r\nPopulation.getInitialProps = async function() {\r\n  const res = await fetch('http://localhost:3000/api/monash/population');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}