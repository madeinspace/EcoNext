{"ast":null,"code":"import _ from 'lodash';\nconst DEFAULT_DATABASE_HOST = '192.168.16.15';\nconst DEFAULT_DATABASE_USER = 'CommUser';\nconst DEFAULT_DATABASE_PASS = 'idCommUser&1admin';\nconst DEFAULT_DATABASE_NAME = 'CommClient';\nconst DATA_DATABASE_NAME = 'CommData_Economy';\nconst COMMAPP_DATABASE_NAME = 'CommApp';\n\nconst handle = async (req, res) => {\n  console.log('host', getScopedEnvVar('CLIENT', 'DATABASE_HOST'));\n  const clients = await knex(CommClientDBConnection()).raw(ClientSQL);\n  console.log('result', result);\n  res.json({\n    title: 'Hello World',\n    clients\n  });\n};\n\nconst knex = require('knex');\n\nconst ignoreClients = _.isUndefined(process.env.IGNORE_CLIENTS) ? [] : process.env.IGNORE_CLIENTS.split(' ');\n\nconst getScopedEnvVar = (scope, db_env_var) => process.env[`${scope}_${db_env_var}`] || process.env[`DEFAULT_${db_env_var}`];\n\nconst CommClientDBConnection = () => ({\n  client: 'mssql',\n  connection: {\n    host: DEFAULT_DATABASE_HOST,\n    user: DEFAULT_DATABASE_USER,\n    password: DEFAULT_DATABASE_PASS,\n    database: DEFAULT_DATABASE_NAME,\n    options: {\n      encrypt: false\n    }\n  }\n});\n\nexport default handle;\nconst ClientSQL = `\nWITH RDAS AS (\n  SELECT\n    DISTINCT(areas.ClientID),\n    CASE WHEN RDAs.IsRDA IS NOT NULL THEN 1 ELSE 0 END AS IsRDA\n    FROM [CommClient].[dbo].[ClientToAreas_Economy] areas\n    LEFT OUTER JOIN (\n    SELECT\n      DISTINCT(ClientID),\n      COUNT(WebID) AS IsRDA\n    FROM [CommClient].[dbo].[ClientToAreas_Economy] areas\n      WHERE WebID > 50\n      GROUP BY (ClientID)\n    ) AS RDAs\n    ON areas.ClientID = RDAs.ClientID\n  )\n  SELECT\n    client.ClientID,\n    client.Name,\n    client.ShortName,\n    client.LongName,\n    client.Alias\n  FROM Client AS client\n  INNER JOIN ClientAppDisable AS clientMeta\n    ON clientMeta.ClientID = client.ClientID\n  INNER JOIN RDAS\n    ON client.ClientID = RDAS.ClientID\n  WHERE clientMeta.IsDisabled = 0\n    AND clientMeta.ApplicationID = 4\n    AND RDAS.IsRDA = 0\n  ${ignoreClients.map(clientAlias => `  AND NOT client.Alias = '${clientAlias}'`).join('\\n')}\n`;","map":{"version":3,"sources":["C:\\Users\\fabrice\\Documents\\Workspace\\EcoNext\\pages\\api\\[clientAlias]\\population.tsx"],"names":["_","DEFAULT_DATABASE_HOST","DEFAULT_DATABASE_USER","DEFAULT_DATABASE_PASS","DEFAULT_DATABASE_NAME","DATA_DATABASE_NAME","COMMAPP_DATABASE_NAME","handle","req","res","console","log","getScopedEnvVar","clients","knex","CommClientDBConnection","raw","ClientSQL","result","json","title","require","ignoreClients","isUndefined","process","env","IGNORE_CLIENTS","split","scope","db_env_var","client","connection","host","user","password","database","options","encrypt","map","clientAlias","join"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,MAAMC,qBAAqB,GAAG,eAA9B;AACA,MAAMC,qBAAqB,GAAG,UAA9B;AACA,MAAMC,qBAAqB,GAAG,mBAA9B;AACA,MAAMC,qBAAqB,GAAG,YAA9B;AACA,MAAMC,kBAAkB,GAAG,kBAA3B;AACA,MAAMC,qBAAqB,GAAG,SAA9B;;AAEA,MAAMC,MAAM,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,eAAe,CAAC,QAAD,EAAW,eAAX,CAAnC;AACA,QAAMC,OAAO,GAAG,MAAMC,IAAI,CAACC,sBAAsB,EAAvB,CAAJ,CAA+BC,GAA/B,CAAmCC,SAAnC,CAAtB;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,MAAtB;AACAT,EAAAA,GAAG,CAACU,IAAJ,CAAS;AAAEC,IAAAA,KAAK,EAAE,aAAT;AAAwBP,IAAAA;AAAxB,GAAT;AACD,CAND;;AAQA,MAAMC,IAAI,GAAGO,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,aAAa,GAAGtB,CAAC,CAACuB,WAAF,CAAcC,OAAO,CAACC,GAAR,CAAYC,cAA1B,IAClB,EADkB,GAElBF,OAAO,CAACC,GAAR,CAAYC,cAAZ,CAA2BC,KAA3B,CAAiC,GAAjC,CAFJ;;AAIA,MAAMf,eAAe,GAAG,CAACgB,KAAD,EAAQC,UAAR,KACtBL,OAAO,CAACC,GAAR,CAAa,GAAEG,KAAM,IAAGC,UAAW,EAAnC,KAAyCL,OAAO,CAACC,GAAR,CAAa,WAAUI,UAAW,EAAlC,CAD3C;;AAGA,MAAMd,sBAAsB,GAAG,OAAO;AACpCe,EAAAA,MAAM,EAAE,OAD4B;AAEpCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE/B,qBADI;AAEVgC,IAAAA,IAAI,EAAE/B,qBAFI;AAGVgC,IAAAA,QAAQ,EAAE/B,qBAHA;AAIVgC,IAAAA,QAAQ,EAAE/B,qBAJA;AAKVgC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AALC;AAFwB,CAAP,CAA/B;;AAUA,eAAe9B,MAAf;AAEA,MAAMU,SAAS,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BfK,aAAa,CACZgB,GADD,CACKC,WAAW,IAAK,6BAA4BA,WAAY,GAD7D,EAECC,IAFD,CAEM,IAFN,CAEY;CAhChB","sourcesContent":["import _ from 'lodash';\r\n\r\nconst DEFAULT_DATABASE_HOST = '192.168.16.15';\r\nconst DEFAULT_DATABASE_USER = 'CommUser';\r\nconst DEFAULT_DATABASE_PASS = 'idCommUser&1admin';\r\nconst DEFAULT_DATABASE_NAME = 'CommClient';\r\nconst DATA_DATABASE_NAME = 'CommData_Economy';\r\nconst COMMAPP_DATABASE_NAME = 'CommApp';\r\n\r\nconst handle = async (req, res) => {\r\n  console.log('host', getScopedEnvVar('CLIENT', 'DATABASE_HOST'));\r\n  const clients = await knex(CommClientDBConnection()).raw(ClientSQL);\r\n\r\n  console.log('result', result);\r\n  res.json({ title: 'Hello World', clients });\r\n};\r\n\r\nconst knex = require('knex');\r\n\r\nconst ignoreClients = _.isUndefined(process.env.IGNORE_CLIENTS)\r\n  ? []\r\n  : process.env.IGNORE_CLIENTS.split(' ');\r\n\r\nconst getScopedEnvVar = (scope, db_env_var) =>\r\n  process.env[`${scope}_${db_env_var}`] || process.env[`DEFAULT_${db_env_var}`];\r\n\r\nconst CommClientDBConnection = () => ({\r\n  client: 'mssql',\r\n  connection: {\r\n    host: DEFAULT_DATABASE_HOST,\r\n    user: DEFAULT_DATABASE_USER,\r\n    password: DEFAULT_DATABASE_PASS,\r\n    database: DEFAULT_DATABASE_NAME,\r\n    options: { encrypt: false }\r\n  }\r\n});\r\nexport default handle;\r\n\r\nconst ClientSQL = `\r\nWITH RDAS AS (\r\n  SELECT\r\n    DISTINCT(areas.ClientID),\r\n    CASE WHEN RDAs.IsRDA IS NOT NULL THEN 1 ELSE 0 END AS IsRDA\r\n    FROM [CommClient].[dbo].[ClientToAreas_Economy] areas\r\n    LEFT OUTER JOIN (\r\n    SELECT\r\n      DISTINCT(ClientID),\r\n      COUNT(WebID) AS IsRDA\r\n    FROM [CommClient].[dbo].[ClientToAreas_Economy] areas\r\n      WHERE WebID > 50\r\n      GROUP BY (ClientID)\r\n    ) AS RDAs\r\n    ON areas.ClientID = RDAs.ClientID\r\n  )\r\n  SELECT\r\n    client.ClientID,\r\n    client.Name,\r\n    client.ShortName,\r\n    client.LongName,\r\n    client.Alias\r\n  FROM Client AS client\r\n  INNER JOIN ClientAppDisable AS clientMeta\r\n    ON clientMeta.ClientID = client.ClientID\r\n  INNER JOIN RDAS\r\n    ON client.ClientID = RDAS.ClientID\r\n  WHERE clientMeta.IsDisabled = 0\r\n    AND clientMeta.ApplicationID = 4\r\n    AND RDAS.IsRDA = 0\r\n  ${ignoreClients\r\n    .map(clientAlias => `  AND NOT client.Alias = '${clientAlias}'`)\r\n    .join('\\n')}\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}