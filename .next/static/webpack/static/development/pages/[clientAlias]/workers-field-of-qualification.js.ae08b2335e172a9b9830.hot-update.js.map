{"version":3,"file":"static/webpack/static\\development\\pages\\[clientAlias]\\workers-field-of-qualification.js.ae08b2335e172a9b9830.hot-update.js","sources":["webpack:///./pages/[clientAlias]/workers-field-of-qualification.tsx"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { useRouter } from 'next/router';\r\nimport { formatNumber, formatChangeNumber } from '../../src/Utils';\r\n\r\nconst LocalWorkerFieldofQualififcation = ({ clients }) => {\r\n  const router = useRouter();\r\n  const { clientAlias } = router.query;\r\n  return (\r\n    <div>\r\n      <h1>Workers field of qualification</h1>\r\n      <p>Client alias is {clientAlias}</p>\r\n      <ul>\r\n        {clients.map(client => (\r\n          <li key={client.ClientID}>{client.Name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocalWorkerFieldofQualififcation;\r\n\r\nLocalWorkerFieldofQualififcation.getInitialProps = async function() {\r\n  const res = await fetch(\r\n    'http://localhost:3000/api/monash/workers-field-of-qualification'\r\n  );\r\n  const data = await res.json();\r\n\r\n  return data;\r\n};\r\n\r\nconst Source = () => (\r\n  <Paragraph>\r\n    Source: Australian Bureau of Statistics, Regional Population Growth,\r\n    Australia (3218.0). Compiled and presented in economy.id by{' '}\r\n    <a\r\n      href=\"http://home.id.com.au/about-us/\"\r\n      target=\"_blank\"\r\n      title=\".id website\"\r\n    >\r\n      .id, the population experts.\r\n      <span className=\"hidden\"> (opens a new window)</span>\r\n    </a>\r\n  </Paragraph>\r\n);\r\n\r\nconst tableBuilder = ({\r\n  prettyName: clientName,\r\n  indName: industry,\r\n  bmName: benchmark,\r\n  genderName: gender,\r\n  TabularData: data\r\n}) => {\r\n  const footerRows = data.filter(item => item.IndustryName === 'Total');\r\n  const parents = _.sortBy(\r\n    data.filter(\r\n      item => item.Heirarchy === 'P' && item.IndustryName !== 'Total'\r\n    ),\r\n    item => item.LabelKey\r\n  );\r\n  const children = data.filter(item => item.Heirarchy === 'C');\r\n\r\n  parents.forEach(parent => {\r\n    parent.children = children.filter(\r\n      child =>\r\n        child.LabelKey > parent.LabelKey &&\r\n        child.LabelKey < parent.LabelKey + 1000\r\n    );\r\n  });\r\n\r\n  return {\r\n    cssClass: '',\r\n    allowExport: false,\r\n    allowSort: true,\r\n    allowSortReset: true,\r\n    groupOn: '',\r\n    clientAlias: 'Monash',\r\n    source: <Source />,\r\n    rawDataSource:\r\n      'Source: Australian Bureau of Statistics, Regional Population Growth, Australia (3218.0). Compiled and presented in economy.id by.id, the population experts.',\r\n    anchorName: 'service-age-groups',\r\n    headRows: [\r\n      {\r\n        cssClass: '',\r\n        cols: [\r\n          {\r\n            cssClass: 'table-area-name',\r\n            displayText: 'Local workers field of qualification - Summary',\r\n            colSpan: 10,\r\n            rowSpan: 0\r\n          }\r\n        ],\r\n        key: 'hr0'\r\n      },\r\n      {\r\n        cssClass: '',\r\n        cols: [\r\n          {\r\n            cssClass: '',\r\n            displayText: `${clientName} - ${industry}`,\r\n            colSpan: 1,\r\n            rowSpan: 0\r\n          },\r\n          {\r\n            cssClass: 'xeven start-year',\r\n            displayText: ' 2016',\r\n            colSpan: 3,\r\n            rowSpan: 0\r\n          },\r\n          {\r\n            cssClass: 'xodd end-year',\r\n            displayText: '2011',\r\n            colSpan: 3,\r\n            rowSpan: 0\r\n          },\r\n          {\r\n            cssClass: 'xeven start-year',\r\n            displayText: 'Change',\r\n            colSpan: 1,\r\n            rowSpan: 0\r\n          }\r\n        ],\r\n        key: 'hr1'\r\n      }\r\n    ],\r\n    cols: [\r\n      {\r\n        id: 0,\r\n        displayText:\r\n          'Field of qualification (Click rows to view sub-categories)',\r\n        dataType: 'int',\r\n        sortable: false,\r\n        cssClass: 'xodd xfirst'\r\n      },\r\n      {\r\n        id: 1,\r\n        displayText: 'Number',\r\n        dataType: 'int',\r\n        sortable: true,\r\n        cssClass: 'xeven latest',\r\n        format: '{0:#,0}'\r\n      },\r\n      {\r\n        id: 2,\r\n        displayText: '%',\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'xeven latest',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 3,\r\n        displayText: `${benchmark}`,\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'xeven latest',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 4,\r\n        displayText: 'Number',\r\n        title: '',\r\n        dataType: 'int',\r\n        sortable: true,\r\n        cssClass: 'xodd',\r\n        format: '{0:#,0}'\r\n      },\r\n      {\r\n        id: 5,\r\n        displayText: '%',\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'per xodd',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 6,\r\n        displayText: `${benchmark}`,\r\n        dataType: 'money',\r\n        sortable: true,\r\n        cssClass: 'xodd',\r\n        format: '{0:+#,0;-#,0;0}'\r\n      },\r\n      {\r\n        id: 7,\r\n        displayText: '2011 - 2016',\r\n        title: '',\r\n        dataType: 'int',\r\n        sortable: true,\r\n        cssClass: 'xeven',\r\n        format: '{0:#,0}'\r\n      }\r\n    ],\r\n    rows: parents.map(row => ({\r\n      expandable: row.children.length > 0,\r\n      id: row.LabelKey,\r\n      data: [\r\n        row.LabelName,\r\n        row.NoYear1,\r\n        row.PerYear1,\r\n        row.BMYear1,\r\n        row.NoYear2,\r\n        row.PerYear2,\r\n        row.BMYear2,\r\n        row.Change12\r\n      ],\r\n      formattedData: [\r\n        `${row.LabelName}`,\r\n        formatNumber(row.NoYear1),\r\n        formatNumber(row.PerYear1),\r\n        formatNumber(row.BMYear1),\r\n        formatNumber(row.NoYear2),\r\n        formatNumber(row.PerYear2),\r\n        formatNumber(row.BMYear2),\r\n        formatChangeNumber(row.Change12, '--')\r\n      ],\r\n      childRows: row.children.map(childRow => ({\r\n        id: childRow.LabelKey,\r\n        data: [\r\n          childRow.LabelName,\r\n          childRow.NoYear1,\r\n          childRow.PerYear1,\r\n          childRow.BMYear1,\r\n          childRow.NoYear2,\r\n          childRow.PerYear2,\r\n          childRow.BMYear2,\r\n          childRow.Change12\r\n        ],\r\n        formattedData: [\r\n          `${childRow.LabelName}`,\r\n          formatNumber(childRow.NoYear1),\r\n          formatNumber(childRow.PerYear1),\r\n          formatNumber(childRow.BMYear1),\r\n          formatNumber(childRow.NoYear2),\r\n          formatNumber(childRow.PerYear2),\r\n          formatNumber(childRow.BMYear2),\r\n          formatChangeNumber(childRow.Change12, '--')\r\n        ]\r\n      }))\r\n    })),\r\n    footRows: footerRows.map(row => {\r\n      return {\r\n        cssClass: '',\r\n        cols: [\r\n          { cssClass: '', displayText: `Total ${gender}`, colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.NoYear1), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.PerYear1), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.BMYear1), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.NoYear2), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.PerYear2), colSpan: 1 },\r\n          { cssClass: '', displayText: formatNumber(row.BMYear2), colSpan: 1 },\r\n          {\r\n            cssClass: '',\r\n            displayText: formatChangeNumber(row.Change12),\r\n            colSpan: 1\r\n          }\r\n        ]\r\n      };\r\n    }),\r\n    noOfRowsOnInit: 16\r\n  };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AACA;AAcA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAVA;AAaA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AA5BA;AA+BA;AAEA;AACA;AAEA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AACA;AACA;AAUA;AAUA;AAAA;AACA;AACA;AAUA;AAZA;AAAA;AAvBA;AAAA;AA+CA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAVA;AAiBA;AACA;AA7LA;AA+LA;;;;A","sourceRoot":""}