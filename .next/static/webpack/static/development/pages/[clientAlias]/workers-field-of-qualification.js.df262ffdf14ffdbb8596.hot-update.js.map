{"version":3,"file":"static/webpack/static\\development\\pages\\[clientAlias]\\workers-field-of-qualification.js.df262ffdf14ffdbb8596.hot-update.js","sources":["webpack:///./src/Utils.ts"],"sourcesContent":["import _ from 'lodash';\r\n// import GatsbyPages from './GatsbyPages';\r\nimport numeral from 'numeral';\r\n\r\nexport const getClassNames = (styles: any, classes: string) => {\r\n  if (_.isEmpty(classes)) {\r\n    return;\r\n  }\r\n  const classArr: any = _.split(classes, ' ');\r\n  let classNames: string = '';\r\n\r\n  _.forEach(classArr, (classN: string) => {\r\n    classNames += _.isUndefined(styles[classN])\r\n      ? ' ' + classN\r\n      : ' ' + styles[classN];\r\n  });\r\n  return classNames;\r\n};\r\n\r\nexport const stripEndQuotes = s => {\r\n  let t = s.length;\r\n  if (s.charAt(0) == '\"') s = s.substring(1, t--);\r\n  if (s.charAt(--t) == '\"') s = s.substring(0, t);\r\n  return s;\r\n};\r\n\r\nexport const detectIE = () => {\r\n  const ua: any = window.navigator.userAgent;\r\n\r\n  // Test values; Uncomment to check result â€¦\r\n\r\n  // IE 10\r\n  // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n\r\n  // IE 11\r\n  // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n\r\n  // Edge 12 (Spartan)\r\n  // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n\r\n  // Edge 13\r\n  // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n\r\n  const msie: any = ua.indexOf('MSIE ');\r\n  if (msie > 0) {\r\n    // IE 10 or older => return version number\r\n    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n  }\r\n\r\n  const trident: any = ua.indexOf('Trident/');\r\n  if (trident > 0) {\r\n    // IE 11 => return version number\r\n    const rv: any = ua.indexOf('rv:');\r\n    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n  }\r\n\r\n  const edge: any = ua.indexOf('Edge/');\r\n  if (edge > 0) {\r\n    // Edge (IE 12+) => return version number\r\n    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n  }\r\n\r\n  // other browser\r\n  return 0;\r\n};\r\n\r\nexport const getHost = () => {\r\n  const domain: any = document.location.hostname.toLowerCase();\r\n  const parts = domain.split('.');\r\n  if (parts[0] === 'www') {\r\n    parts.shift();\r\n  }\r\n  parts.shift();\r\n  const result = '.' + parts.join('.');\r\n  return result;\r\n};\r\n\r\nexport const getHashParams = () => {\r\n  const hashParams = {};\r\n  let e = undefined;\r\n  const a = /\\+/g; // Regex for replacing addition symbol with a space\r\n  const r = /([^&;=]+)=?([^&;]*)/g;\r\n  const d = s => decodeURIComponent(s.replace(a, ' '));\r\n  const q = window.location.hash.substring(1);\r\n\r\n  while ((e = r.exec(q))) {\r\n    hashParams[d(e[1])] = d(e[2]);\r\n  }\r\n  return hashParams;\r\n};\r\n\r\nexport const buildQueryStringWithObjectKeys = (obj: any, jointer: string) =>\r\n  _.map(_.keys(obj), key => key + '=' + obj[key]).join(jointer);\r\n\r\nexport const getParameterByName = (\r\n  name: string,\r\n  url: string = window.location.href\r\n): string => {\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex: any = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\r\n  const results = regex.exec(url);\r\n  if (!results) {\r\n    return null;\r\n  }\r\n  if (!results[2]) {\r\n    return '';\r\n  }\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n};\r\n\r\nexport const insertArrayAt = (array, index, arrayToInsert) => {\r\n  Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\r\n  return array;\r\n};\r\n\r\nexport const deserialiseQueryString = (query: string) => {\r\n  return (\r\n    _.chain(query)\r\n      .replace('?', '') // width=727&height=647&layers=1,4&zoom=14&lat=-36.641495731141354&lon=146.76125049591067&mapstyle=road\r\n      .split('&') // [\"width=727\",\"height=647\", ...]\r\n      // @ts-ignore\r\n      .map(_.partial(_.split, _, '=', 2)) // [[\"width\",\"727\"],[\"height\",\"647\"], ...]\r\n      .fromPairs() // {\"width\":\"727\",\"height\":\"647\", ...}\r\n      .value()\r\n  );\r\n};\r\n\r\nexport function naturalSort(a, b) {\r\n  const re: any = /(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g;\r\n  const sre: any = /^\\s+|\\s+$/g;\r\n  const snre: any = /\\s+/g;\r\n  const dre: any = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/;\r\n  const hre: any = /^0x[0-9a-f]+$/i;\r\n  const ore: any = /^0/;\r\n  const i: any = s => {\r\n    return (('' + s).toLowerCase() || '' + s).replace(sre, '');\r\n  };\r\n  const x: any = i(a);\r\n  const y: any = i(b);\r\n  const xN: any = x\r\n    .replace(re, '\\0$1\\0')\r\n    .replace(/\\0$/, '')\r\n    .replace(/^\\0/, '')\r\n    .split('\\0');\r\n  const yN = y\r\n    .replace(re, '\\0$1\\0')\r\n    .replace(/\\0$/, '')\r\n    .replace(/^\\0/, '')\r\n    .split('\\0');\r\n  const mhre: any = x.match(hre);\r\n  const yhre: any = y.match(hre);\r\n  const xD: any = parseInt(mhre, 16) || (xN.length !== 1 && Date.parse(x));\r\n  const yD: any =\r\n    parseInt(yhre, 16) || (xD && y.match(dre) && Date.parse(y)) || null;\r\n  const normChunk: any = (s, l) => {\r\n    return (\r\n      ((!s.match(ore) || l === 1) && parseFloat(s)) ||\r\n      s.replace(snre, ' ').replace(sre, '') ||\r\n      0\r\n    );\r\n  };\r\n  let oFxNcL: any;\r\n  let oFyNcL: any;\r\n\r\n  if (yD) {\r\n    if (xD < yD) {\r\n      return -1;\r\n    } else if (xD > yD) {\r\n      return 1;\r\n    }\r\n  }\r\n  for (\r\n    let cLoc = 0, xNl = xN.length, yNl = yN.length, numS = Math.max(xNl, yNl);\r\n    cLoc < numS;\r\n    cLoc++\r\n  ) {\r\n    oFxNcL = normChunk(xN[cLoc] || '', xNl);\r\n    oFyNcL = normChunk(yN[cLoc] || '', yNl);\r\n    if (isNaN(oFxNcL) !== isNaN(oFyNcL)) {\r\n      return isNaN(oFxNcL) ? 1 : -1;\r\n    }\r\n    if (/[^\\x00-\\x80]/.test(oFxNcL + oFyNcL) && oFxNcL.localeCompare) {\r\n      const comp = oFxNcL.localeCompare(oFyNcL);\r\n      return comp / Math.abs(comp);\r\n    }\r\n    if (oFxNcL < oFyNcL) {\r\n      return -1;\r\n    } else if (oFxNcL > oFyNcL) {\r\n      return 1;\r\n    }\r\n  }\r\n}\r\n\r\nexport function redirectToAreaByWebID(webID) {\r\n  // redirect to small areas\r\n  var path = window.location.href.split('?')[0];\r\n  var reg = /\\/[/home]+$/;\r\n  if (reg.test(path)) {\r\n    path = path.substr(0, path.lastIndexOf('/'));\r\n  }\r\n  window.location.href = `${path}about?WebID=${webID}`;\r\n}\r\nexport const mergeArraysById = (a1, a2, id) =>\r\n  a1.map(itm => ({\r\n    ...a2.find(item => item[id] === itm[id] && item),\r\n    ...itm\r\n  }));\r\n\r\n// export function mapByKey(list, keyGetter) {\r\n//   const map = new Map();\r\n//   list.forEach(item => {\r\n//     const key = keyGetter(item);\r\n//     const collection = map.get(key);\r\n//     if (!collection) {\r\n//       map.set(key, [item]);\r\n//     } else {\r\n//       collection.push(item);\r\n//     }\r\n//   });\r\n//   var mapAsc = new Map([...map].sort());\r\n//   return mapAsc;\r\n// }\r\n\r\nexport const pathParts = (path: string) => {\r\n  const REGEX = /^\\/?(?<clientAlias>[^\\/]+)\\/?(?<pageAlias>[^\\/]+)?\\/?/;\r\n  return path.match(REGEX).groups;\r\n};\r\n\r\n// export const IsGatsbyPage = path =>\r\n//   GatsbyPages.includes(pathParts(path).pageAlias)\r\n\r\nexport const formatNumber = number => numeral(number).format('0,0');\r\nexport const formatPercent = (number, zero = '0') =>\r\n  number ? numeral(number).format('0,0.0') : zero;\r\nexport const formatChangeNumber = (number, zero = '0') =>\r\n  number ? numeral(number).format('+0,0') : zero;\r\nexport const formatChangePercent = (number, zero = '0') =>\r\n  number ? numeral(number).format('+0,0.00') : zero;\r\nexport const formatShortDecimal = (number, zero = '0') =>\r\n  number ? numeral(number).format('0.0') : zero;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAHA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AADA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}